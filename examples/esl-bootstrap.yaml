# ESL Bootstrap Specification v1.0
# This specification defines ESL itself, and can be used to generate the ESL CLI and framework

# AI Context Optimization Header
ai_context:
  domain: "specification_language_design"
  complexity_level: "meta_programming"
  related_patterns: ["domain_specific_languages", "code_generation", "abstract_syntax_trees"]
  context_inheritance: "inherits_from: language_design_patterns"
  llm_hints:
    - "@generation_target: typescript_nodejs_cli"
    - "@architectural_pattern: plugin_based_extensible_framework"
    - "@validation_strategy: schema_driven_with_semantic_checks"

# Governance and Metadata
governance:
  ownership: "esl_core_team"
  compliance_requirements: ["mit_license", "semantic_versioning"]
  approval_workflow: "language_committee -> implementation_team -> community_review"
  change_impact_scope: ["all_esl_specifications", "cli_tools", "ide_integrations"]
  versioning_strategy: "semantic_versioning_with_migration_guides"

# Business Layer: What ESL Should Accomplish
business_specification:
  domain_model:
    concepts:
      - name: "ESLDocument"
        business_definition: "A complete specification that bridges business intent and technical implementation"
        business_rules:
          - rule: "Every ESL document must have ai_context for LLM optimization"
            exceptions: ["legacy migrations may omit ai_context temporarily"]
            ai_hint: "@implementation: validate ai_context presence in schema"
            governance_tag: "@compliance: required for ai_generation_quality"
            
          - rule: "Business specifications must be human-readable"
            exceptions: ["auto-generated sections can be technical"]
            ai_hint: "@implementation: provide natural language validation"
            
          - rule: "Technical specifications must be AI-optimized"
            exceptions: ["none - this is core requirement"]
            ai_hint: "@implementation: include context hints and patterns"

      - name: "ContextManager"
        business_definition: "Intelligent system that preserves business logic relationships across LLM context limits"
        business_rules:
          - rule: "Context chunks must preserve semantic relationships"
            ai_hint: "@implementation: use dependency graphs for chunking"
            
          - rule: "Context must be optimized per AI task type"
            ai_hint: "@implementation: different contexts for code_gen vs analysis"

  stakeholder_requirements:
    sales_team:
      goals: ["track customer interactions", "manage sales pipeline", "follow up on leads"]
      constraints: ["mobile access required", "works offline", "simple interface"]
      success_metrics: ["50% faster lead response", "20% higher conversion rate"]
      
    sales_managers:
      goals: ["team performance visibility", "pipeline forecasting", "territory management"]
      constraints: ["real-time reporting", "integration with existing tools"]
      success_metrics: ["accurate forecasting", "improved team productivity"]

technical_specification:
  system_architecture:
    services:
      - name: "customer_service"
        purpose: "manage customer data and lifecycle"
        dependencies: ["user_service", "notification_service"]
        ai_generation_hints:
          patterns: ["repository_pattern", "domain_driven_design"]
          frameworks: ["express", "typeorm", "postgresql"]
          
      - name: "lead_service"
        purpose: "manage lead qualification and conversion"
        dependencies: ["customer_service", "email_service"]
        ai_generation_hints:
          patterns: ["state_machine", "event_sourcing"]
          frameworks: ["express", "redis", "bull_queue"]

  data_model:
    entities:
      Customer:
        semantic_type: "aggregate_root"
        business_context: "primary business entity representing our clients"
        fields:
          - name: "email"
            business_meaning: "primary contact method"
            technical_type: "string"
            validation_rules: ["email_format", "required", "unique"]
            ai_context: "@llm: used for notifications and login"
            
          - name: "company_size"
            business_meaning: "number of employees, affects pricing tier"
            technical_type: "enum"
            validation_rules: ["values: [startup, small, medium, enterprise]"]
            ai_context: "@llm: drives business logic for pricing and features"

integration_specification:
  external_systems:
    salesforce:
      sync_direction: "bidirectional"
      data_mapping: "ESL.Customer -> Salesforce.Account"
      integration_type: "real_time_sync"
      
    email_marketing:
      sync_direction: "esl_to_external"
      data_mapping: "ESL.Lead -> EmailPlatform.Contact"
      integration_type: "batch_export"
